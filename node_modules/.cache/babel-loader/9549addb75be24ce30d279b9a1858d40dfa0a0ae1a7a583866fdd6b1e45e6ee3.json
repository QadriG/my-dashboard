{"ast":null,"code":"var _jsxFileName = \"D:\\\\my-dashboard\\\\src\\\\components\\\\Auth\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const API_BASE = \"http://localhost:5000/api/auth\";\n  const handleReset = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const res = await fetch(`${API_BASE}/reset-password/${token}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setSuccess(\"Password reset successful! Redirecting to login...\");\n        setTimeout(() => navigate(\"/login\"), 3000);\n      } else {\n        setError(data.error || \"Reset failed\");\n      }\n    } catch {\n      setError(\"Server error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center h-screen w-screen text-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"glass-box p-8 max-w-sm w-full text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-6\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleReset,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"input-field w-full mb-4 px-4 py-3 rounded-lg bg-transparent text-white placeholder-white border border-white focus:outline-none\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm New Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          className: \"input-field w-full mb-6 px-4 py-3 rounded-lg bg-transparent text-white placeholder-white border border-white focus:outline-none\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"neon-button w-full py-3 rounded-lg\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mt-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-500 mt-2\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"RqbuaFgsMrx9MkzyK+jW+ewfcIM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","token","navigate","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","API_BASE","handleReset","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/my-dashboard/src/components/Auth/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nexport default function ResetPassword() {\r\n  const { token } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const API_BASE = \"http://localhost:5000/api/auth\";\r\n\r\n  const handleReset = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(`${API_BASE}/reset-password/${token}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ password }),\r\n      });\r\n      const data = await res.json();\r\n\r\n      if (res.ok) {\r\n        setSuccess(\"Password reset successful! Redirecting to login...\");\r\n        setTimeout(() => navigate(\"/login\"), 3000);\r\n      } else {\r\n        setError(data.error || \"Reset failed\");\r\n      }\r\n    } catch {\r\n      setError(\"Server error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center h-screen w-screen text-white\">\r\n      <div className=\"glass-box p-8 max-w-sm w-full text-center\">\r\n        <h2 className=\"text-2xl font-bold mb-6\">Reset Password</h2>\r\n        <form onSubmit={handleReset}>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"New Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"input-field w-full mb-4 px-4 py-3 rounded-lg bg-transparent text-white placeholder-white border border-white focus:outline-none\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm New Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            className=\"input-field w-full mb-6 px-4 py-3 rounded-lg bg-transparent text-white placeholder-white border border-white focus:outline-none\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"neon-button w-full py-3 rounded-lg\">\r\n            Reset Password\r\n          </button>\r\n        </form>\r\n        {error && <p className=\"text-red-500 mt-2\">{error}</p>}\r\n        {success && <p className=\"text-green-500 mt-2\">{success}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}