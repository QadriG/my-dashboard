{"ast":null,"code":"var _jsxFileName = \"D:\\\\my-dashboard\\\\src\\\\components\\\\Auth\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"../../styles/globals.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Use env variable or fallback to localhost for API base\n  const API_BASE = process.env.REACT_APP_API_URL || \"http://localhost:5000/api/auth\";\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n\n    // Password validations\n    if (password.length < 8) {\n      setError(\"Password must be at least 8 characters long.\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      setLoading(true);\n      const res = await fetch(`${API_BASE}/reset-password/${token}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        setError(data.message || \"Failed to reset password\");\n        setLoading(false);\n        return;\n      }\n      alert(\"Password reset successfully. Please login.\");\n      navigate(\"/login\");\n    } catch (err) {\n      console.error(err);\n      setError(\"Something went wrong, please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-dark\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"glass-box p-8 rounded-lg shadow-lg w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl text-center font-bold mb-6\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-sm mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"New Password\",\n            className: \"w-full p-3 rounded-lg bg-dark text-white border border-gray-600 focus:outline-none\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            className: \"w-full p-3 rounded-lg bg-dark text-white border border-gray-600 focus:outline-none\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"neon-button w-full py-3 rounded-lg disabled:opacity-50\",\n          disabled: loading,\n          children: loading ? \"Resetting...\" : \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"zOBUGt2HQd6y9JCxP42I/L0wwSw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","token","navigate","password","setPassword","confirmPassword","setConfirmPassword","error","setError","loading","setLoading","API_BASE","process","env","REACT_APP_API_URL","handleSubmit","e","preventDefault","length","res","fetch","method","headers","body","JSON","stringify","data","json","ok","message","alert","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["D:/my-dashboard/src/components/Auth/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/globals.css\";\r\n\r\nexport default function ResetPassword() {\r\n  const { token } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Use env variable or fallback to localhost for API base\r\n  const API_BASE =\r\n    process.env.REACT_APP_API_URL || \"http://localhost:5000/api/auth\";\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    // Password validations\r\n    if (password.length < 8) {\r\n      setError(\"Password must be at least 8 characters long.\");\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const res = await fetch(`${API_BASE}/reset-password/${token}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ password }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (!res.ok) {\r\n        setError(data.message || \"Failed to reset password\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      alert(\"Password reset successfully. Please login.\");\r\n      navigate(\"/login\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(\"Something went wrong, please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-dark\">\r\n      <div className=\"glass-box p-8 rounded-lg shadow-lg w-96\">\r\n        <h2 className=\"text-2xl text-center font-bold mb-6\">Reset Password</h2>\r\n\r\n        {error && <p className=\"text-red-500 text-sm mb-4\">{error}</p>}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"New Password\"\r\n              className=\"w-full p-3 rounded-lg bg-dark text-white border border-gray-600 focus:outline-none\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              disabled={loading}\r\n            />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              className=\"w-full p-3 rounded-lg bg-dark text-white border border-gray-600 focus:outline-none\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              disabled={loading}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"neon-button w-full py-3 rounded-lg disabled:opacity-50\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Resetting...\" : \"Reset Password\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}